@page "/EditContact/{Id}"
@using ContactManager.Data
@inject ContactService contactService
@inject NavigationManager NavigationManager

<h2>Edit Contact</h2>
<hr />
<EditForm Model=@contactObj OnValidSubmit=@ValidFormSubmitted>
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="row">
        <div class="col-md-8">
            <div class="form-group">
                <label for="FirstName" class="control-label">First Name</label>
                <InputText @bind-Value="@contactObj.FirstName" class="form-control" id="FirstName" />
                <ValidationMessage For="@(() => contactObj.FirstName)" />
            </div>
            <div class="form-group">
                <label for="LastName" class="control-label">Last Name</label>
                <InputText class="form-control" @bind-Value="@contactObj.LastName" />
                <ValidationMessage For="@(() => contactObj.LastName)" />
            </div>
            <div class="form-group">
                <label for="PhoneNumber" class="control-label">Phone Number</label>
                <InputText class="form-control" @bind-Value="@contactObj.PhoneNumber" />
                <ValidationMessage For="@(() => contactObj.PhoneNumber)" />
            </div>
            <div class="form-group">
                <label for="BirthDate" class="control-label">Birth Date</label>
                <input type="date" class="form-control" @bind="@contactObj.BirthDate" />
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <button type="submit" class="btn btn-primary">Update</button>
                <input type="button" class="btn btn-secondary" @onclick="@Cancel" value="Cancel" />
            </div>
        </div>
    </div>
</EditForm>

@code {

    [Parameter]
    public string Id { get; set; }

    Contact contactObj = new Contact();

    protected override async Task OnInitializedAsync()
    {
        contactObj = await Task.Run(() => contactService.GetContact(Guid.Parse(Id)));
    }

    protected async void ValidFormSubmitted()
    {
        await contactService.UpdateContact(contactObj);
        NavigationManager.NavigateTo("Contacts");
    }

    void Cancel()
    {
        NavigationManager.NavigateTo("Contacts");
    }
}